name: Release Rill CLI
on:
  workflow_dispatch:
  push:
    branches: [ "goreleaser-prototype" ]
    paths:
      - ".github/workflows/cli-release.yml"
      - ".goreleaser.yaml"
      - "go.mod"
      - "cli/**"
jobs:
  release:
    # strategy:
    #   matrix:
    #     name: ["OSX", "Linux"]
    #     include:
    #     - name: OSX
    #       runs-on: macos-latest
    #       config: .goreleaser.darwin.yaml
    #       upload: osx
    #     - name: Linux
    #       runs-on: ubuntu-latest
    #       config: .goreleaser.linux.yaml
    #       upload: linux

    name: Upload Assets to GitHub w/ goreleaser
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Checkout sysroot for cross compilation
        uses: actions/checkout@v3
        with:
          repository: goreleaser/goreleaser-cross-example-sysroot
          path: sysroot
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19.2

      - name: Set up NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Build UI
        run: make cli

      - name: Authenticate GCS
        uses: google-github-actions/auth@v0
        with:
          credentials_json: "${{ secrets.RILL_BINARY_SA }}"

      # - name: Run GoReleaser
      #   uses: goreleaser/goreleaser-action@v2
      #   with:
      #     distribution: goreleaser
      #     version: ${{ env.GITHUB_REF_NAME }}
      #     args: release --config ${{ matrix.config }} --rm-dist
      #   env:
      #     CGO_ENABLED: 1

      - name: release publish
        run: make release-dry-run

# commenting upload to gcs for now
      # - name: Upload to GCS
      #   uses: google-github-actions/upload-cloud-storage@v1
      #   with:
      #     path: dist/
      #     destination: pkg.rilldata.com/rill/nightly/${{ matrix.upload }}
