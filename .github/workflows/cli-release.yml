name: Release Rill CLI
on:
  workflow_dispatch:
  push:
    branches: [ "goreleaser-prototype" ]
    paths:
      - ".github/workflows/cli-release.yml"
      - ".goreleaser.yaml"
      - "go.mod"
      - "cli/**"
jobs:
  release:
    name: Upload Assets to GitHub w/ goreleaser
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: "true"

      - run: git fetch --prune --unshallow
      - name: setup dependencies
        uses: actions/setup-go@v2
      - name: build web-local and run cli
        run: |
          git clone git@github.com:goreleaser/goreleaser-cross-example-sysroot.git sysroot
          ls -lrt sysroot/ 
      - name: release dry run
        run: make release-dry-run
      - name: setup release environment
        run: |-
          echo '${{ secrets.RILL_BINARY_SA }}' > rill-binary-sa.json

          echo 'GITHUB_TOKEN=${{ secrets.GORELEASER_ACCESS_TOKEN }}' > .release-env
          echo 'GOOGLE_APPLICATION_CREDENTIALS=/rill-binary-sa.json' >> .release-env

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          distribution: goreleaser
          version: ${{ env.GITHUB_REF_NAME }}
          args: release --config .linux-goreleaser.yaml --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GORELEASER_ACCESS_TOKEN }}
          CGO_ENABLED: 1

      - name: Release Publish
        run: |-
          docker run \
              --rm \
              --privileged \
              -e CGO_ENABLED=1 \
              --env-file .release-env \
              -v /var/run/docker.sock:/var/run/docker.sock \
              -v `pwd`:/go/src/rilldata/rill-developer \
              -v `pwd`/sysroot:/sysroot \
              -v `pwd`/rill-binary-sa.json:/rill-binary-sa.json \
              -w /go/src/rilldata/rill-developer \
              goreleaser/goreleaser-cross:v1.19.2 \
              release --rm-dist --skip-validate
