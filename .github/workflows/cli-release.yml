name: release
on:
  workflow_dispatch:
  push:
    branches: [ "goreleaser-prototype" ]
    paths:
      - ".github/workflows/cli-release.yml"
      - ".goreleaser.yaml"
      - "go.mod"
      - "cli/**"
jobs:
  release:
    name: Buid w/ goreleaser
    strategy:
      matrix:
        include:
          - os: darwin
            arch: amd64
            name: macos-amd64
            ext: ""
          - os: darwin
            arch: arm64
            name: macos-arm64
            ext: ""
#          - os: linux
#            arch: amd64
#            name: linux-amd64
#            ext: ""
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: "true"
      - name: Fetch tags # TODO: if this is required?
        run: git fetch --prune --unshallow
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19.2
      - name: Set up NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Build UI
        run: make cli
      - name: Authenticate GCS
        uses: google-github-actions/auth@v0
        with:
          credentials_json: "${{ secrets.RILL_BINARY_SA }}"
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          distribution: goreleaser
          version: ${{ env.GITHUB_REF_NAME }}
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GORELEASER_ACCESS_TOKEN }}
          CGO_ENABLED: 1
  release_linux:
    name: Buid w/ goreleaser
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
            name: linux-amd64
            ext: ""
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: "true"
      - name: Fetch tags # TODO: if this is required?
        run: git fetch --prune --unshallow
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19.2
      - name: Set up NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Build UI
        run: make cli
      - name: Authenticate GCS
        uses: google-github-actions/auth@v0
        with:
          credentials_json: "${{ secrets.RILL_BINARY_SA }}"
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          distribution: goreleaser
          version: ${{ env.GITHUB_REF_NAME }}
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GORELEASER_ACCESS_TOKEN }}
          CGO_ENABLED: 1
